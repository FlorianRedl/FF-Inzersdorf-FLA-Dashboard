<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style TargetType="Image" x:Key="imgSTM">
        <Setter Property="Source" Value="../Assets/STM.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgSTF">
        <Setter Property="Source" Value="../Assets/STF.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgWTM">
        <Setter Property="Source" Value="../Assets/WTM.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgWTF">
        <Setter Property="Source" Value="../Assets/WTF.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgATM">
        <Setter Property="Source" Value="../Assets/ATM.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgATF">
        <Setter Property="Source" Value="../Assets/ATF.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgMaschinist">
        <Setter Property="Source" Value="../Assets/Maschinist.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgMelder">
        <Setter Property="Source" Value="../Assets/Melder.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgGK">
        <Setter Property="Source" Value="../Assets/GK.png"/>
    </Style>
    <Style TargetType="Image" x:Key="imgFF">
        <Setter Property="Source" Value="../Assets/FF-Logo.png"/>
    </Style>
    <Style TargetType="Image" x:Key="icoSW">
        <Setter Property="Source" Value="../Assets/ico-stoppuhr.png"/>
    </Style>
    <Style TargetType="Image" x:Key="icoVideo">
        <Setter Property="Source" Value="../Assets/ico-video.png"/>
    </Style>
    <Style TargetType="Image" x:Key="icoWürfel">
        <Setter Property="Source" Value="../Assets/ico-würfel.png"/>
    </Style>
    <Style TargetType="Image" x:Key="icoTon">
        <Setter Property="Source" Value="../Assets/ico-ton.png"/>
    </Style>
    <Style TargetType="Image" x:Key="icoEins">
        <Setter Property="Source" Value="../Assets/ico-eingekreiste-1.png"/>
    </Style>
    
    <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="AutoGenerateColumns" Value="false" />
        <Setter Property="CanUserDeleteRows" Value="false" />
        <Setter Property="CanUserAddRows" Value="false" />
        <Setter Property="CanUserReorderColumns" Value="false" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="ColumnWidth"  Value="*" />
        <Setter Property="FontSize"  Value="28" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="AlternatingRowBackground" Value="Transparent" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
    </Style>
    <Style x:Key="DataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="DataGridCellStyle2" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        
    </Style>
    
    <Style x:Key="RoundButton" TargetType="{x:Type Button}" x:Name="button">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="354" Padding="1" Margin="2" BorderBrush="Black" BorderThickness="0" Background="LightGray">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#A2A2A2">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModeButton" TargetType="{x:Type Button}">
        <!--<Setter Property="Tag" Value="Center"/>-->
        <Setter Property="Background" Value="#DF162A"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FFF8F2"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ED4556"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#FFF8F2">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#ED4556"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#FFF8F2">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="pbStyle" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar" >
                    <Grid x:Name="Root">
                        <Border 
                        Name="PART_Track" 
                        CornerRadius="0 0 3 3" 
                        Background="Transparent"/>
                        <Border 
                        Name="PART_Indicator" 
                        CornerRadius="0 3 3 3" 
                        Background="#ED4556" 
                        Opacity="1"
                        HorizontalAlignment="Left" />   
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Getting vertical style working using technique described here: http://stackoverflow.com/a/6849237/7532 -->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="Width"
                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"/>
                            <Setter TargetName="Root" Property="Height"
                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>